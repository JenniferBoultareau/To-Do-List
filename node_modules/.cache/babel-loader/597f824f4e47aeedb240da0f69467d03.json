{"ast":null,"code":"import _slicedToArray from \"/home/jennifer/Documents/To-Do-List/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jennifer/Documents/To-Do-List/src/Components/Todo/Todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport modifTodo from '../../Actions/modifTodoAction';\nimport switchView from '../../Actions/switchviewAction';\nimport { editTodos } from '../../Actions/addTodoAction';\nimport './Todo.css';\n\nfunction Todo(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  useEffect(() => {\n    getDatas();\n  }, []);\n\n  const getDatas = () => {\n    axios.get('http://localhost:8000/todo').then(result => {\n      setTodos(result.data);\n      props.dispatch(editTodos(result.data));\n    });\n  };\n\n  const removeTodo = todo => {\n    axios.delete(\"http://localhost:8000/todo/\".concat(todo._id)).then(result => {\n      getDatas();\n    });\n  };\n\n  const updateTodo = index => {\n    props.dispatch(modifTodo(index));\n    props.dispatch(switchView('ModifTodo'));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, todos.map((todo, index) => {\n    return React.createElement(\"div\", {\n      className: \"allCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      color: \"pink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, todo.todo), React.createElement(Card.Meta, {\n      className: \"meta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, moment(todo.timestamp).format('DD/MM/YYYY')), React.createElement(Card.Description, {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, todo.explication), React.createElement(Button, {\n      inverted: true,\n      color: \"blue\",\n      size: \"big\",\n      onClick: () => updateTodo(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Modifier\"), React.createElement(Button, {\n      inverted: true,\n      color: \"blue\",\n      size: \"big\",\n      onClick: () => removeTodo(todo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Supprimer\"))));\n  }));\n}\n\nconst mapStateToProps = state => ({\n  view: state.view,\n  body: state.body\n});\n\nexport default connect(mapStateToProps)(Todo);","map":{"version":3,"sources":["/home/jennifer/Documents/To-Do-List/src/Components/Todo/Todo.js"],"names":["React","useState","useEffect","Card","Button","axios","moment","connect","modifTodo","switchView","editTodos","Todo","props","todos","setTodos","getDatas","get","then","result","data","dispatch","removeTodo","todo","delete","_id","updateTodo","index","map","timestamp","format","explication","mapStateToProps","state","view","body"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport modifTodo from '../../Actions/modifTodoAction';\nimport switchView from '../../Actions/switchviewAction';\nimport { editTodos} from '../../Actions/addTodoAction';\n\nimport './Todo.css';\n\nfunction Todo(props) {\n\nconst [todos, setTodos] = useState([]);\n  \nuseEffect(() => {\n  getDatas();\n}, []);\n\nconst getDatas = () => {\n  axios.get('http://localhost:8000/todo')\n  .then((result) => {\n    setTodos(result.data);\n    props.dispatch(editTodos(result.data))\n  });\n};\n\nconst removeTodo = (todo) => {\n  axios.delete(`http://localhost:8000/todo/${todo._id}`).then((result) => {\n    getDatas()\n  });\n};\n\nconst updateTodo = (index) => {\n  props.dispatch(modifTodo(index))\n  props.dispatch(switchView('ModifTodo'));\n};\n\n  return (\n    <div className=\"container\">\n    {todos.map((todo, index) => {\n      return(\n        <div className=\"allCard\">\n          <Card fluid color=\"pink\">\n            <Card.Content>\n              <Card.Header className=\"header\">{todo.todo}</Card.Header>\n              <Card.Meta className=\"meta\">{moment(todo.timestamp).format('DD/MM/YYYY')}</Card.Meta>\n              <Card.Description className=\"description\">{todo.explication}</Card.Description>\n            <Button \n              inverted color='blue'\n              size='big'\n              onClick={() => updateTodo(index)}\n            >\n              Modifier\n            </Button>\n            <Button \n              inverted color='blue'\n              size='big'\n              onClick={() => removeTodo(todo)}\n            >\n              Supprimer\n            </Button>\n            </Card.Content>\n          </Card>\n        </div>\n      )\n    })}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  view: state.view,\n  body: state.body,\n});\n\nexport default connect(mapStateToProps)(Todo);"]},"metadata":{},"sourceType":"module"}