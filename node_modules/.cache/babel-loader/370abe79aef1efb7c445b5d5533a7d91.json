{"ast":null,"code":"import _slicedToArray from \"/Users/Jennifer/Documents/To-Do-List/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jennifer/Documents/To-Do-List/src/Components/Formulaire/Formulaire.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Form } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport { editTodos } from '../../Actions/addTodoAction';\nimport './Formulaire.css';\n\nfunction Formulaire(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        todo = _useState2[0],\n        setTodo = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        explication = _useState4[0],\n        setExplication = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        todos = _useState6[0],\n        setTodos = _useState6[1];\n\n  const submitTodo = () => {\n    axios.post('http://localhost:8001/todo', {\n      todo: todo,\n      explication: explication\n    }).then(result => {});\n    setTodo('');\n    setExplication('');\n    const temp = {\n      todo: todo,\n      explication: explication\n    };\n    setTodos([...todos, temp]);\n  };\n\n  useEffect(() => {\n    props.dispatch(editTodos(todos));\n  });\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"allForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Form, {\n    className: \"ui huge form\",\n    style: {\n      width: 700\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"inputLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"What To Do !\"), React.createElement(Form.Field, {\n    control: \"input\",\n    value: todo,\n    onChange: event => setTodo(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"inputLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"What Is It !\"), React.createElement(Form.TextArea, {\n    value: explication,\n    onChange: event => setExplication(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"violet\",\n    className: \"ui massive button submitButton\",\n    onClick: submitTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Enregistrer\"))));\n}\n\nconst mapStateToProps = state => ({\n  body: state\n});\n\nexport default connect(mapStateToProps)(Formulaire);","map":{"version":3,"sources":["/Users/Jennifer/Documents/To-Do-List/src/Components/Formulaire/Formulaire.js"],"names":["React","useState","useEffect","axios","Button","Form","connect","editTodos","Formulaire","props","todo","setTodo","explication","setExplication","todos","setTodos","submitTodo","post","then","result","temp","dispatch","width","event","target","value","mapStateToProps","state","body"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,OAAO,kBAAP;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,oBAEDR,QAAQ,CAAC,EAAD,CAFP;AAAA;AAAA,QAElBS,IAFkB;AAAA,QAEZC,OAFY;;AAAA,qBAGaV,QAAQ,CAAC,EAAD,CAHrB;AAAA;AAAA,QAGlBW,WAHkB;AAAA,QAGLC,cAHK;;AAAA,qBAICZ,QAAQ,CAAC,EAAD,CAJT;AAAA;AAAA,QAIlBa,KAJkB;AAAA,QAIXC,QAJW;;AAMzB,QAAMC,UAAU,GAAG,MAAM;AACvBb,IAAAA,KAAK,CAACc,IAAN,CAAW,4BAAX,EAAyC;AACvCP,MAAAA,IAAI,EAAEA,IADiC;AAEvCE,MAAAA,WAAW,EAAEA;AAF0B,KAAzC,EAGGM,IAHH,CAGSC,MAAD,IAAY,CACnB,CAJD;AAKAR,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACA,UAAMO,IAAI,GAAG;AACXV,MAAAA,IAAI,EAAEA,IADK;AAEXE,MAAAA,WAAW,EAAEA;AAFF,KAAb;AAIAG,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWM,IAAX,CAAD,CAAR;AACD,GAbD;;AAeAlB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAACY,QAAN,CAAed,SAAS,CAACO,KAAD,CAAxB;AACD,GAFQ,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,KAAK,EAAEZ,IAFT;AAGE,IAAA,QAAQ,EAAGa,KAAD,IAAWZ,OAAO,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,EAQE,oBAAC,IAAD,CAAM,QAAN;AACE,IAAA,KAAK,EAAEb,WADT;AAEE,IAAA,QAAQ,EAAGW,KAAD,IAAWV,cAAc,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAYE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,SAAS,EAAC,gCAFZ;AAGE,IAAA,OAAO,EAAET,UAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZF,CADF,CADA,CADF;AA0BD;;AAED,MAAMU,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,IAAI,EAAED;AAD4B,CAAZ,CAAxB;;AAIA,eAAerB,OAAO,CAACoB,eAAD,CAAP,CAAyBlB,UAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Form } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport { editTodos } from '../../Actions/addTodoAction';\n\nimport './Formulaire.css';\n\nfunction Formulaire(props) {\n\n  const [todo, setTodo] = useState('');\n  const [explication, setExplication] = useState('');\n  const [todos, setTodos] = useState([]);\n\n  const submitTodo = () => {\n    axios.post('http://localhost:8001/todo', {\n      todo: todo,\n      explication: explication\n    }).then((result) => {\n    })\n    setTodo('');\n    setExplication('');\n    const temp = { \n      todo: todo,\n      explication: explication\n    }\n    setTodos([...todos, temp]);    \n  };\n\n  useEffect(() => {\n    props.dispatch(editTodos(todos));\n  });\n\n  return (\n    <div className=\"container\">\n    <div className=\"allForm\">\n      <Form className=\"ui huge form\" style={{ width: 700}}>\n        <label className=\"inputLabel\">What To Do !</label>\n        <Form.Field \n          control='input'\n          value={todo}\n          onChange={(event) => setTodo(event.target.value)} \n        />\n        <label className=\"inputLabel\">What Is It !</label>\n        <Form.TextArea  \n          value={explication}\n          onChange={(event) => setExplication(event.target.value)}\n        />\n        <Button \n          color='violet'\n          className=\"ui massive button submitButton\"\n          onClick={submitTodo}\n        >\n          Enregistrer\n        </Button>\n      </Form>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  body: state\n});\n\nexport default connect(mapStateToProps)(Formulaire);"]},"metadata":{},"sourceType":"module"}