{"ast":null,"code":"import _slicedToArray from \"/home/jennifer/Documents/To-Do-List/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jennifer/Documents/To-Do-List/src/Components/ModifTodo/ModifTodo.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Form } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\n\nfunction ModifTodo(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        newTodo = _useState2[0],\n        setNewTodo = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newExplication = _useState4[0],\n        setNewExplication = _useState4[1];\n\n  const _useState5 = useState(undefined),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newId = _useState6[0],\n        setNewId = _useState6[1];\n\n  useEffect(() => {\n    props.body.length > 0 && setNewTodo(props.body[props.index].todo);\n    props.body.length > 0 && setNewExplication(props.body[props.index].explication);\n    props.body.length > 0 && setNewId(props.body[props.index]._id);\n  }, [props.index]);\n\n  const submitNewTodo = (todo, explication, id) => {\n    axios.put(\"http://localhost:8080/todo/\".concat(id), {\n      todo: todo,\n      explication: explication\n    }).then(result => {\n      console.log(result);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"allForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Form, {\n    className: \"ui huge form\",\n    style: {\n      width: 700\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    label: \"To Do\",\n    control: \"input\",\n    className: \"inputTitle\",\n    value: newTodo,\n    onChange: event => setNewTodo(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Form.TextArea, {\n    label: \"What is it!\",\n    value: newExplication,\n    onChange: event => setNewExplication(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"violet\",\n    className: \"ui massive button\",\n    onClick: () => submitNewTodo(newTodo, newExplication, newId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Enregistrer\"))));\n}\n\nconst mapStateToProps = state => ({\n  body: state.body,\n  index: state.index\n});\n\nexport default connect(mapStateToProps)(ModifTodo);","map":{"version":3,"sources":["/home/jennifer/Documents/To-Do-List/src/Components/ModifTodo/ModifTodo.js"],"names":["React","useState","useEffect","axios","Button","Form","connect","ModifTodo","props","newTodo","setNewTodo","newExplication","setNewExplication","undefined","newId","setNewId","body","length","index","todo","explication","_id","submitNewTodo","id","put","then","result","console","log","width","event","target","value","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Form } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\n\nfunction ModifTodo(props) {\n\n  const [newTodo, setNewTodo] = useState('');\n  const [newExplication, setNewExplication] = useState('');\n  const [newId, setNewId] = useState(undefined);\n\n  useEffect(() => {\n    props.body.length > 0 && setNewTodo(props.body[props.index].todo);\n    props.body.length > 0 && setNewExplication(props.body[props.index].explication);\n    props.body.length > 0 && setNewId(props.body[props.index]._id);\n  },[props.index]);\n\n\n  const submitNewTodo = (todo, explication, id) => {\n    axios.put(`http://localhost:8080/todo/${id}`, {\n      todo: todo,\n      explication: explication\n    }).then((result) => {\n      console.log(result);\n    });\n  };\n\n  return (\n    <div className=\"container\">\n    <div className=\"allForm\">\n      <Form className=\"ui huge form\" style={{ width: 700}}>\n        <Form.Field \n          label='To Do' \n          control='input' \n          className=\"inputTitle\"\n          value={newTodo}\n          onChange={(event) => setNewTodo(event.target.value)} \n        />\n        <Form.TextArea \n          label='What is it!' \n          value={newExplication}\n          onChange={(event) => setNewExplication(event.target.value)}\n        />\n        <Button \n          color='violet'\n          className=\"ui massive button\"\n          onClick={() => submitNewTodo(newTodo, newExplication, newId)}\n        >\n          Enregistrer\n        </Button>\n      </Form>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  body: state.body,\n  index: state.index,\n})\n\nexport default connect(mapStateToProps)(ModifTodo);"]},"metadata":{},"sourceType":"module"}